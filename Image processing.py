# -*- coding: utf-8 -*-
"""Assignment_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p0ZZCTA51FN8399g0NOxYN1jH8hODSjt
"""

import cv2
import os
import numpy as np
import seaborn as sns; sns.set()
import warnings; warnings.simplefilter('ignore')
from sklearn.cluster import MiniBatchKMeans

siddhesh_castle = Image.open('Picture.jpg')

siddhesh_castle = cv2.imread("Picture.jpg")

plt.imshow(siddhesh_castle)
plt.show()

picture_channel = siddhesh_castle.shape[2]

print('channels:', picture_channel)

#size in bytes
siddhesh_castle_size = 'Picture.jpg'
picture_details = os.path.getsize(siddhesh_castle_size)
print('size:', round(picture_details), 'Bytes')

#reshaping_the_image
ats = siddhesh_castle/255.0
#[number of pixels x number of channels]
ats = ats.reshape(533*799, 3)
ats.shape

def plot_pixels(ats, title, colors=None, N=10000):
    if colors is None:
        colors = ats
    rs = np.random.RandomState(0)
    k = rs.permutation(ats.shape[0])[:N]
    colors = colors[k]
    G, B, R = ats[k].T
    fig, ft = plt.subplots(1, 2, figsize=(14, 6))
    ft[0].scatter(R, G, color=colors, marker='.')
    ft[0].set(xlabel='Red', ylabel='Green', xlim=(0, 1), ylim=(0, 1))
    ft[1].scatter(R, B, color=colors, marker='.')
    ft[1].set(xlabel='Red', ylabel='Blue', xlim=(0, 1), ylim=(0, 1))
    fig.suptitle(title, size=20);
#Plotting the input color space as 2 plots
plot_pixels(ats, title='Green vs. Red and Blue vs. Red')

#where k = 8
kmeans_1 = MiniBatchKMeans(8)
kmeans_1.fit(ats)
colors_1 = kmeans_1.cluster_centers_[kmeans_1.predict(ats)]
plot_pixels(ats, colors=colors_1, title="Reducing it to 8 color")

colors_2 = colors_1.reshape(siddhesh_castle.shape)

fig, ft = plt.subplots(1, 2, figsize=(14, 6),
                       subplot_kw=dict(xticks=[], yticks=[]))
fig.subplots_adjust(wspace=0.05)
ft[0].imshow(siddhesh_castle)
ft[0].set_title(' original image', size=14)
ft[1].imshow(colors_2)
ft[1].set_title('Image compressed to 8 colors', size=14);

#where K = 16
kmeans_1 = MiniBatchKMeans(16)
kmeans_1.fit(ats)
colors_1 = kmeans_1.cluster_centers_[kmeans_1.predict(ats)]
plot_pixels(ats, colors=colors_1, title="Reducing it to 16 color")

colors_2 = colors_1.reshape(siddhesh_castle.shape)
fig, ft = plt.subplots(1, 2, figsize=(14, 6),subplot_kw=dict(xticks=[], yticks=[]))
fig.subplots_adjust(wspace=0.05)
ft[0].imshow(siddhesh_castle)
ft[0].set_title(' original image', size=14)
ft[1].imshow(colors_2)
ft[1].set_title('image compressed to 16 colors', size=14);

#Plotting the new compressed color space as 2 plots
plot_pixels(ats, title='Green vs. Red and Blue vs. Red')

# (e)After careful observation, the major difference we can see is the sky shade which has got changed little with respect to color in comparison with the original image.
#    Along with that, structure of the cloud has also changed.The castle color has also become light. 
#    In fact the whole picture has become light in comparison with original picture.